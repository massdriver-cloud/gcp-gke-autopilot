schema: draft-07
name: gcp-gke-autopilot-cluster
description: "GKE is a managed Kubernetes service in GCP that implements the full Kubernetes API, 4-way autoscaling, release channels and multi-cluster support."
source_url: github.com/massdriver-cloud/gcp-gke-autopilot
access: public
type: infrastructure

steps:
  - path: src
    provisioner: terraform
  - path: core-services
    provisioner: terraform
  - path: custom-resources
    provisioner: terraform

params:
  examples:
    - __name: Development
      core_services:
        enable_ingress: false
    - __name: Production
      core_services:
        enable_ingress: true
    - __name: Wizard
      k8s_version: "1.24"
      cluster_networking:
        cluster_ipv4_cidr_block: /16
        services_ipv4_cidr_block: /20
        master_ipv4_cidr_block: 172.16.0.0/28
      core_services:
        enable_ingress: true
        cloud_dns_managed_zones: []
  required:
    - k8s_version
    - cluster_networking
    - core_services
  properties:
    k8s_version:
      type: string
      title: Kubernetes Version
      description: The version of Kubernetes to run
      default: "1.23"
      enum:
        - "1.24"
        - "1.23"
        - "1.22"
        - "1.21"
        - "1.20"
        - "1.19"
    cluster_networking:
      type: object
      title: Cluster Networking
      description: "Configure the network configuration of the cluster"
      required:
        - cluster_ipv4_cidr_block
        - services_ipv4_cidr_block
        - master_ipv4_cidr_block
      properties:
        cluster_ipv4_cidr_block:
          type: string
          pattern: ^(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})?(?:\/(?:[0-9]|[1-2][0-9]|3[0-2]))?$
          message:
            pattern: Must be a valid CIDR block (10.100.0.0/16) or a netmask (/16)
          title: Pods IPv4 CIDR Block
          default: "/16"
          description: "CIDR block to use for kubernetes pods. Set to /netmask (e.g. /16) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use."
          $md.immutable: true
        services_ipv4_cidr_block:
          type: string
          pattern: ^(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3})?(?:\/(?:[0-9]|[1-2][0-9]|3[0-2]))?$
          message:
            pattern: Must be a valid CIDR block (10.100.0.0/20) or a netmask (/20)
          title: Services IPv4 CIDR Block
          default: "/20"
          description: "CIDR block to use for kubernetes services. Set to /netmask (e.g. /20) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use."
          $md.immutable: true
        master_ipv4_cidr_block:
          $ref: https://raw.githubusercontent.com/massdriver-cloud/artifact-definitions/main/definitions/types/cidr.json
          title: Cluster IPv4 CIDR Block
          default: "172.16.0.0/28"
          description: "CIDR block to use for kubernetes control plane. The mask for this must be exactly /28. Must be from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16), and should not conflict with other ranges in use. It is recommended to use consecutive /28 blocks from the 172.16.0.0/16 range for all your GKE clusters (172.16.0.0/28 for the first cluster, 172.16.0.16/28 for the second, etc.)."
          $md.immutable: true
    core_services:
      type: object
      title: Core Services
      description: Configure core services in Kubernetes for Massdriver to manage
      required: []
      properties:
        enable_ingress:
          type: boolean
          title: Enable Ingress
          description: Enabling this will create an nginx ingress controller in the cluster, allowing internet traffic to flow into web accessible services within the cluster
          default: false
        cloud_dns_managed_zones:
          type: array
          title: Cloud DNS Managed Zones
          description: Select any Cloud DNS Managed Zones associated with this cluster to allow the cluster to automatically manage DNS records and SSL certificates
          default: []
          items:
            type: string
            title: Managed Zone

connections:
  required:
    - gcp_authentication
    - subnetwork
  properties:
    gcp_authentication:
      $ref: massdriver/gcp-service-account
    subnetwork:
      $ref: massdriver/gcp-subnetwork

artifacts:
  required:
    - kubernetes_cluster
  properties:
    kubernetes_cluster:
      $ref: massdriver/kubernetes-cluster

ui:
  items:
    ui:order:
      - k8s_version
      - cluster_networking
      - core_services
      - "*"
  core_services:
    ui:order:
      - enable_ingress
      - cloud_dns_managed_zones
      - "*"
    cloud_dns_managed_zones:
      items:
        ui:field: dnsZonesDropdown
        cloud: gcp
